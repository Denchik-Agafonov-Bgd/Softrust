{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Person } from 'src/app/models/person';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/subject.service\";\nimport * as i2 from \"src/app/services/person.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/inputmask\";\nimport * as i6 from \"ngx-captcha\";\nfunction FirstComponent_div_8_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0418\\u043C\\u044F \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FirstComponent_div_8_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u0414\\u043B\\u0438\\u043D\\u0430 \\u0434\\u043E\\u0436\\u043D\\u0430 \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 2 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FirstComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, FirstComponent_div_8_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵtemplate(2, FirstComponent_div_8_small_2_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.form.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.form.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction FirstComponent_div_14_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 email \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FirstComponent_div_14_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u0442\\u043D\\u044B\\u0439 email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FirstComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, FirstComponent_div_14_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵtemplate(2, FirstComponent_div_14_small_2_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nfunction FirstComponent_div_20_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FirstComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, FirstComponent_div_20_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.form.get(\"phone\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction FirstComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subject_r11 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", subject_r11.id);\n    i0.ɵɵproperty(\"ngValue\", subject_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subject_r11.name, \" \");\n  }\n}\nfunction FirstComponent_div_32_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FirstComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, FirstComponent_div_32_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.form.get(\"message\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nexport class FirstComponent {\n  constructor(subjectServices, personService, formBuilder) {\n    this.subjectServices = subjectServices;\n    this.personService = personService;\n    this.formBuilder = formBuilder;\n    this.person = new Person();\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      name: new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      phone: new FormControl('', [Validators.required]),\n      message: new FormControl('', [Validators.required]),\n      subjectId: new FormControl('', [Validators.required]),\n      recaptcha: new FormControl('', [Validators.required])\n    });\n    this.title = 'SofTrust.UI';\n    this.subjects = [];\n    this.person1 = [];\n    this.siteKey = '6Ldkq-MkAAAAAG16wm76dnES4mCo-VQRe-eebM1Z';\n    this.isCaptcha = true;\n  }\n  ngOnInit() {\n    this.subjectServices.getSubjects().subscribe(result => this.subjects = result);\n  }\n  CreatePerson(person) {\n    this.personService.createPerson(person).subscribe(result => this.person1 = result);\n  }\n  handleSuccess() {\n    console.log(this.isCaptcha);\n    this.isCaptcha = false;\n    console.log(this.isCaptcha);\n  }\n}\nFirstComponent.ɵfac = function FirstComponent_Factory(t) {\n  return new (t || FirstComponent)(i0.ɵɵdirectiveInject(i1.SubjectService), i0.ɵɵdirectiveInject(i2.PersonService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nFirstComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FirstComponent,\n  selectors: [[\"app-first\"]],\n  inputs: {\n    person: \"person\"\n  },\n  decls: 39,\n  vars: 13,\n  consts: [[1, \"container\"], [1, \"card\", 3, \"formGroup\"], [1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"\\u0418\\u043C\\u044F\", \"formControlName\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"validation\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"8 (999) 999-99-99\", \"formControlName\", \"phone\", \"mask\", \"8 (999) 999-99-99\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"subjectId\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"\", \"formControlName\", \"message\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"message\", \"formControlName\", \"recaptcha\", 3, \"siteKey\"], [\"captchaElem\", \"\"], [\"id\", \"hider\", 3, \"disabled\", \"click\"], [1, \"validation\"], [4, \"ngIf\"], [3, \"value\", \"ngValue\"]],\n  template: function FirstComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u041D\\u0430\\u043C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function FirstComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.person.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, FirstComponent_div_8_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\");\n      i0.ɵɵtext(12, \"Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function FirstComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.person.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, FirstComponent_div_14_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n      i0.ɵɵtext(18, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p-inputMask\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function FirstComponent_Template_p_inputMask_ngModelChange_19_listener($event) {\n        return ctx.person.phone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, FirstComponent_div_20_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\");\n      i0.ɵɵtext(24, \"\\u0422\\u0435\\u043C\\u0430 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"select\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function FirstComponent_Template_select_ngModelChange_25_listener($event) {\n        return ctx.person.subjectId = $event;\n      });\n      i0.ɵɵtemplate(26, FirstComponent_option_26_Template, 2, 3, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelementStart(28, \"div\", 2)(29, \"label\");\n      i0.ɵɵtext(30, \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function FirstComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.person.message = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, FirstComponent_div_32_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"br\")(34, \"ngx-recaptcha2\", 10, 11)(36, \"br\");\n      i0.ɵɵelementStart(37, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function FirstComponent_Template_button_click_37_listener() {\n        return ctx.CreatePerson(ctx.person);\n      });\n      i0.ɵɵtext(38, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_4_0;\n      let tmp_6_0;\n      let tmp_10_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.form.get(\"name\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.form.get(\"email\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.form.get(\"email\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.phone);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.form.get(\"phone\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.form.get(\"phone\")) == null ? null : tmp_6_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.subjectId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subjects);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.person.message);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.form.get(\"message\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.form.get(\"message\")) == null ? null : tmp_10_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"siteKey\", ctx.siteKey);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i5.InputMask, i6.ReCaptcha2Component],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Person","i0","FirstComponent","constructor","subjectServices","personService","formBuilder","email","required","name","minLength","phone","message","subjectId","recaptcha","ngOnInit","getSubjects","subscribe","result","subjects","CreatePerson","person","createPerson","person1","handleSuccess","console","log","isCaptcha","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\ProjectAngular\\SofTrust.UI\\src\\app\\components\\first\\first.component.ts","C:\\Users\\User\\ProjectAngular\\SofTrust.UI\\src\\app\\components\\first\\first.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Person } from 'src/app/models/person';\nimport { Subject } from 'src/app/models/subject';\nimport { PersonService } from 'src/app/services/person.service';\nimport { SubjectService } from 'src/app/services/subject.service';\n\n@Component({\n  selector: 'app-first',\n  templateUrl: './first.component.html',\n  styleUrls: ['./first.component.css']\n})\nexport class FirstComponent {\n  @Input() person: Person = new Person;\n\n  form: FormGroup = new FormGroup({\n    email: new FormControl('', [\n      Validators.email,\n      Validators.required\n    ]),\n    name: new FormControl(null, [\n      Validators.required,\n      Validators.minLength(2)\n    ]),\n    phone: new FormControl('', [\n      Validators.required\n    ]),\n    message: new FormControl('', [\n      Validators.required\n    ]),\n    subjectId: new FormControl('', [\n      Validators.required\n    ]),\n    recaptcha: new FormControl('', [\n      Validators.required\n    ]),\n\n  });\n  title = 'SofTrust.UI';\n\n  subjects: Subject[] = []\n  person1: Person[] = []\n\n  siteKey = '6Ldkq-MkAAAAAG16wm76dnES4mCo-VQRe-eebM1Z'\n  isCaptcha: boolean = true;\n\n  constructor(\n    private subjectServices: SubjectService,\n    private personService: PersonService,\n    private formBuilder: FormBuilder\n    ) {}\n\n  ngOnInit(): void {\n    this.subjectServices\n    .getSubjects()\n    .subscribe((result: Subject[]) => (this.subjects = result));\n  }\n\n  CreatePerson(person: Person) {\n    this.personService\n    .createPerson(person)\n    .subscribe((result: Person[]) => (this.person1 = result));\n  }\n\n  handleSuccess(){\n    console.log(this.isCaptcha);\n    this.isCaptcha = false;\n    console.log(this.isCaptcha);\n  }\n}\n","<div class=\"container\">\n\n  <form class=\"card\" [formGroup]=\"form\">\n    <h1>Напишите Нам</h1>\n\n    <div class=\"form-control\">\n      <label>Ваше имя </label>\n      <input type=\"text\" [(ngModel)]=\"person.name\"  placeholder=\"Имя\" formControlName=\"name\">\n\n      <div\n        *ngIf=\"form.get('name')?.invalid && form.get('name')?.touched\"\n        class=\"validation\">\n\n        <small *ngIf=\"form.get('name')?.hasError('required')\">\n          Поле Имя не может быть пустым\n        </small>\n\n        <small *ngIf=\"form.get('name')?.errors?.['minlength']\" >\n          Длина дожна быть не менее 2 символа\n        </small>\n\n      </div>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Email </label>\n      <input type=\"text\" [(ngModel)]=\"person.email\" placeholder=\"Email\" formControlName=\"email\">\n      <div\n        *ngIf=\"form.get('email')?.invalid && form.get('email')?.touched\"\n        class=\"validation\">\n\n\n        <small *ngIf=\"form.get('email')?.hasError('required')\">\n          Поле email не может быть пустым\n        </small>\n        <small *ngIf=\"form.get('email')?.hasError('email')\">\n          Некорретный email\n        </small>\n      </div>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Телефон </label>\n      <p-inputMask [(ngModel)]=\"person.phone\" placeholder=\"8 (999) 999-99-99\" formControlName=\"phone\" mask=\"8 (999) 999-99-99\"></p-inputMask>\n      <div\n        *ngIf=\"form.get('phone')?.invalid && form.get('phone')?.touched\"\n        class=\"validation\">\n\n        <small *ngIf=\"form.get('phone')?.hasError('required')\">\n          Поле Телефон не может быть пустым\n        </small>\n      </div>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Тема </label>\n      <select [(ngModel)]=\"person.subjectId\" formControlName=\"subjectId\">\n        <option\n          *ngFor=\"let subject of subjects\"\n          value=\"{{subject.id}}\"\n          [ngValue]=\"subject.id\"\n        >\n          {{subject.name}}\n        </option>\n      </select>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Сообщение </label>\n      <input type=\"text\" [(ngModel)]=\"person.message\" placeholder=\"\" formControlName=\"message\">\n      <div\n        *ngIf=\"form.get('message')?.invalid && form.get('message')?.touched\"\n        class=\"validation\">\n\n\n        <small *ngIf=\"form.get('message')?.hasError('required')\">\n          Поле Сообщение не может быть пустым\n        </small>\n\n      </div>\n    </div>\n\n    <br>\n\n    <ngx-recaptcha2 formControlName=\"message\" #captchaElem\n      [siteKey] = \"siteKey\"\n      formControlName=\"recaptcha\">\n    </ngx-recaptcha2>\n\n    <br>\n\n    <button (click)=\"CreatePerson(person)\" id=\"hider\" [disabled]=\"form.invalid\" >Отправить</button>\n\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}