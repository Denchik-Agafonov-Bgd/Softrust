{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/subject.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/inputmask\";\nfunction AppComponent_div_8_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0418\\u043C\\u044F \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_8_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u0414\\u043B\\u0438\\u043D\\u0430 \\u0434\\u043E\\u0436\\u043D\\u0430 \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 2 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_8_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵtemplate(2, AppComponent_div_8_small_2_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.form.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.form.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction AppComponent_div_14_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 email \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_14_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u0442\\u043D\\u044B\\u0439 email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_14_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵtemplate(2, AppComponent_div_14_small_2_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nfunction AppComponent_div_20_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_20_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.form.get(\"phone\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AppComponent_div_37_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_37_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.form.get(\"message\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AppComponent_tr_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const subject_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(subject_r11.name);\n  }\n}\nexport class AppComponent {\n  constructor(subjectServices) {\n    this.subjectServices = subjectServices;\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      name: new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      phone: new FormControl('', [Validators.required]),\n      message: new FormControl('', [Validators.required])\n    });\n    this.title = 'SofTrust.UI';\n    this.subject = [];\n  }\n  ngOnInit() {\n    this.subjectServices.getSubjects().subscribe(result => this.subject = result);\n    console.log(this.subject);\n  }\n  submit() {\n    console.log('Form', this.form);\n    const formData = {\n      ...this.form.value\n    };\n    console.log('Form Data:', formData);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SubjectService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 54,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"\\u0418\\u043C\\u044F\", \"formControlName\", \"name\"], [\"class\", \"validation\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"placeholder\", \"8 (999) 999-99-99\", \"formControlName\", \"phone\", \"mask\", \"8 (999) 999-99-99\"], [\"value\", \"ru\"], [\"type\", \"text\", \"placeholder\", \"\", \"formControlName\", \"message\"], [\"type\", \"submit\", 1, \"btn\", 3, \"disabled\"], [4, \"ngFor\", \"ngForOf\"], [1, \"validation\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u041D\\u0430\\u043C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵtemplate(8, AppComponent_div_8_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\");\n      i0.ɵɵtext(12, \"Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵtemplate(14, AppComponent_div_14_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n      i0.ɵɵtext(18, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"p-inputMask\", 6);\n      i0.ɵɵtemplate(20, AppComponent_div_20_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\");\n      i0.ɵɵtext(24, \"\\u0422\\u0435\\u043C\\u0430 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"select\")(26, \"option\", 7);\n      i0.ɵɵtext(27, \"\\u0420\\u043E\\u0441\\u0441\\u0438\\u044F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 7);\n      i0.ɵɵtext(29, \"\\u0411\\u0435\\u043B\\u043E\\u0440\\u0443\\u0441\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"option\", 7);\n      i0.ɵɵtext(31, \"\\u0423\\u043A\\u0440\\u0430\\u0438\\u043D\\u0430\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelementStart(33, \"div\", 2)(34, \"label\");\n      i0.ɵɵtext(35, \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 8);\n      i0.ɵɵtemplate(37, AppComponent_div_37_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵelementStart(39, \"button\", 9);\n      i0.ɵɵtext(40, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"table\")(42, \"thead\")(43, \"th\");\n      i0.ɵɵtext(44, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"th\");\n      i0.ɵɵtext(46, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"th\");\n      i0.ɵɵtext(48, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"th\");\n      i0.ɵɵtext(50, \"Place\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(51, \"th\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"tbody\");\n      i0.ɵɵtemplate(53, AppComponent_tr_53_Template, 3, 1, \"tr\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.form.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.form.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.form.get(\"phone\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.form.get(\"phone\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.form.get(\"message\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.form.get(\"message\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subject);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.InputMask],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AppComponent","constructor","subjectServices","email","required","name","minLength","phone","message","ngOnInit","getSubjects","subscribe","result","subject","console","log","submit","form","formData","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\ProjectAngular\\SofTrust.UI\\src\\app\\app.component.ts","C:\\Users\\User\\ProjectAngular\\SofTrust.UI\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subject } from './models/subject';\nimport { SubjectService } from './services/subject.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  form: FormGroup = new FormGroup({\n    email: new FormControl('', [\n      Validators.email,\n      Validators.required\n    ]),\n    name: new FormControl(null, [\n      Validators.required,\n      Validators.minLength(2)\n    ]),\n    phone: new FormControl('', [\n      Validators.required\n    ]),\n    message: new FormControl('', [\n      Validators.required\n    ]),\n  });\n  title = 'SofTrust.UI';\n\n  subject: Subject[] = []\n\n  constructor(private subjectServices: SubjectService) {}\n\n  ngOnInit(): void {\n    this.subjectServices\n    .getSubjects()\n    .subscribe((result: Subject[]) => (this.subject = result));\n\n    console.log(this.subject);\n  }\n\n  submit(){\n    console.log('Form', this.form)\n    const formData = {...this.form.value}\n\n    console.log('Form Data:', formData)\n\n  }\n}\n","<div class=\"container\">\n\n  <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <h1>Напишите Нам</h1>\n\n    <div class=\"form-control\">\n      <label>Ваше имя </label>\n      <input type=\"text\" placeholder=\"Имя\" formControlName=\"name\">\n\n      <div\n        *ngIf=\"form.get('name')?.invalid && form.get('name')?.touched\"\n        class=\"validation\">\n\n        <small *ngIf=\"form.get('name')?.hasError('required')\">\n          Поле Имя не может быть пустым\n        </small>\n\n        <small *ngIf=\"form.get('name')?.errors?.['minlength']\" >\n          Длина дожна быть не менее 2 символа\n        </small>\n\n      </div>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Email </label>\n      <input type=\"text\" placeholder=\"Email\" formControlName=\"email\">\n      <div\n        *ngIf=\"form.get('email')?.invalid && form.get('email')?.touched\"\n        class=\"validation\">\n\n\n        <small *ngIf=\"form.get('email')?.hasError('required')\">\n          Поле email не может быть пустым\n        </small>\n        <small *ngIf=\"form.get('email')?.hasError('email')\">\n          Некорретный email\n        </small>\n      </div>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Телефон </label>\n      <p-inputMask placeholder=\"8 (999) 999-99-99\" formControlName=\"phone\" mask=\"8 (999) 999-99-99\"></p-inputMask>\n      <div\n        *ngIf=\"form.get('phone')?.invalid && form.get('phone')?.touched\"\n        class=\"validation\">\n\n        <small *ngIf=\"form.get('phone')?.hasError('required')\">\n          Поле Телефон не может быть пустым\n        </small>\n      </div>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Тема </label>\n      <select>\n        <option value=\"ru\">Россия</option>\n        <option value=\"ru\">Белорусь</option>\n        <option value=\"ru\">Украина</option>\n      </select>\n    </div>\n\n    <br>\n\n    <div class=\"form-control\">\n      <label>Сообщение </label>\n      <input type=\"text\" placeholder=\"\" formControlName=\"message\">\n      <div\n        *ngIf=\"form.get('message')?.invalid && form.get('message')?.touched\"\n        class=\"validation\">\n\n\n        <small *ngIf=\"form.get('message')?.hasError('required')\">\n          Поле Сообщение не может быть пустым\n        </small>\n\n      </div>\n    </div>\n\n    <br>\n\n\n\n    <button class=\"btn\"type=\"submit\" [disabled]=\"form.invalid\">Отправить</button>\n\n  </form>\n</div>\n\n<table>\n  <thead>\n    <th>Name</th>\n    <th>First Name</th>\n    <th>Last Name</th>\n    <th>Place</th>\n    <th></th>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let subject of subject\">\n      <td>{{ subject.name }}</td>\n\n    </tr>\n  </tbody>\n</table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}