{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Person } from './models/person';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/subject.service\";\nimport * as i2 from \"./services/person.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"primeng/inputmask\";\nfunction AppComponent_div_0_div_9_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0418\\u043C\\u044F \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_0_div_9_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u0414\\u043B\\u0438\\u043D\\u0430 \\u0434\\u043E\\u0436\\u043D\\u0430 \\u0431\\u044B\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 2 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_0_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_0_div_9_small_1_Template, 2, 0, \"small\", 0);\n    i0.ɵɵtemplate(2, AppComponent_div_0_div_9_small_2_Template, 2, 0, \"small\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.form.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.form.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction AppComponent_div_0_div_15_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 email \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_0_div_15_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u0442\\u043D\\u044B\\u0439 email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_0_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_0_div_15_small_1_Template, 2, 0, \"small\", 0);\n    i0.ɵɵtemplate(2, AppComponent_div_0_div_15_small_2_Template, 2, 0, \"small\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.form.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.form.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nfunction AppComponent_div_0_div_21_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_0_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_0_div_21_small_1_Template, 2, 0, \"small\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.form.get(\"phone\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AppComponent_div_0_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subject_r11 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", subject_r11.id);\n    i0.ɵɵproperty(\"ngValue\", subject_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subject_r11.name, \" \");\n  }\n}\nfunction AppComponent_div_0_div_33_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_0_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_0_div_33_small_1_Template, 2, 0, \"small\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.form.get(\"message\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function AppComponent_div_0_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.submit());\n    });\n    i0.ɵɵelementStart(3, \"h1\");\n    i0.ɵɵtext(4, \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u041D\\u0430\\u043C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n    i0.ɵɵtext(7, \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.person.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, AppComponent_div_0_div_9_Template, 3, 2, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n    i0.ɵɵtext(13, \"Email \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 6);\n    i0.ɵɵtemplate(15, AppComponent_div_0_div_15_Template, 3, 2, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\");\n    i0.ɵɵtext(19, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"p-inputMask\", 7);\n    i0.ɵɵtemplate(21, AppComponent_div_0_div_21_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"br\");\n    i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\");\n    i0.ɵɵtext(25, \"\\u0422\\u0435\\u043C\\u0430 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"select\");\n    i0.ɵɵtemplate(27, AppComponent_div_0_option_27_Template, 2, 3, \"option\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(28, \"br\");\n    i0.ɵɵelementStart(29, \"div\", 3)(30, \"label\");\n    i0.ɵɵtext(31, \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 9);\n    i0.ɵɵtemplate(33, AppComponent_div_0_div_33_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"br\");\n    i0.ɵɵelementStart(35, \"button\", 10);\n    i0.ɵɵtext(36, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_6_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.person.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r0.form.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r0.form.get(\"name\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r0.form.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r0.form.get(\"email\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r0.form.get(\"phone\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx_r0.form.get(\"phone\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.subjects);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r0.form.get(\"message\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx_r0.form.get(\"message\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.form.invalid);\n  }\n}\nexport class AppComponent {\n  constructor(subjectServices, personService) {\n    this.subjectServices = subjectServices;\n    this.personService = personService;\n    this.person = new Person();\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      name: new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      phone: new FormControl('', [Validators.required]),\n      message: new FormControl('', [Validators.required])\n    });\n    this.title = 'SofTrust.UI';\n    this.subjects = [];\n  }\n  ngOnInit() {\n    this.subjectServices.getSubjects().subscribe(result => this.subjects = result);\n  }\n  submit() {}\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SubjectService), i0.ɵɵdirectiveInject(i2.PersonService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  inputs: {\n    person: \"person\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"container\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"\\u0418\\u043C\\u044F\", \"formControlName\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"validation\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"placeholder\", \"8 (999) 999-99-99\", \"formControlName\", \"phone\", \"mask\", \"8 (999) 999-99-99\"], [3, \"value\", \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"\", \"formControlName\", \"message\"], [\"type\", \"submit\", 1, \"btn\", 3, \"disabled\"], [1, \"validation\"], [3, \"value\", \"ngValue\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_div_0_Template, 37, 8, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.person);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.InputMask],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Person","i0","AppComponent","constructor","subjectServices","personService","email","required","name","minLength","phone","message","ngOnInit","getSubjects","subscribe","result","subjects","submit","selectors","inputs","person","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\ProjectAngular\\SofTrust.UI\\src\\app\\app.component.ts","C:\\Users\\User\\ProjectAngular\\SofTrust.UI\\src\\app\\app.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Person } from './models/person';\nimport { Subject } from './models/subject';\nimport { PersonService } from './services/person.service';\nimport { SubjectService } from './services/subject.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent {\n  @Input() person: Person = new Person;\n\n  form: FormGroup = new FormGroup({\n    email: new FormControl('', [\n      Validators.email,\n      Validators.required\n    ]),\n    name: new FormControl(null, [\n      Validators.required,\n      Validators.minLength(2)\n    ]),\n    phone: new FormControl('', [\n      Validators.required\n    ]),\n    message: new FormControl('', [\n      Validators.required\n    ]),\n  });\n  title = 'SofTrust.UI';\n\n  subjects: Subject[] = []\n\n\n  constructor(\n    private subjectServices: SubjectService,\n    private personService: PersonService\n    ) {}\n\n  ngOnInit(): void {\n    this.subjectServices\n    .getSubjects()\n    .subscribe((result: Subject[]) => (this.subjects = result));\n  }\n\n  submit(){\n\n  }\n}\n","<div *ngIf=\"person\">\n  <div class=\"container\">\n\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n      <h1>Напишите Нам</h1>\n\n      <div class=\"form-control\">\n        <label>Ваше имя </label>\n        <input type=\"text\" [(ngModel)]=\"person.name\"  placeholder=\"Имя\" formControlName=\"name\">\n\n        <div\n          *ngIf=\"form.get('name')?.invalid && form.get('name')?.touched\"\n          class=\"validation\">\n\n          <small *ngIf=\"form.get('name')?.hasError('required')\">\n            Поле Имя не может быть пустым\n          </small>\n\n          <small *ngIf=\"form.get('name')?.errors?.['minlength']\" >\n            Длина дожна быть не менее 2 символа\n          </small>\n\n        </div>\n      </div>\n\n      <br>\n\n      <div class=\"form-control\">\n        <label>Email </label>\n        <input type=\"text\" placeholder=\"Email\" formControlName=\"email\">\n        <div\n          *ngIf=\"form.get('email')?.invalid && form.get('email')?.touched\"\n          class=\"validation\">\n\n\n          <small *ngIf=\"form.get('email')?.hasError('required')\">\n            Поле email не может быть пустым\n          </small>\n          <small *ngIf=\"form.get('email')?.hasError('email')\">\n            Некорретный email\n          </small>\n        </div>\n      </div>\n\n      <br>\n\n      <div class=\"form-control\">\n        <label>Телефон </label>\n        <p-inputMask placeholder=\"8 (999) 999-99-99\" formControlName=\"phone\" mask=\"8 (999) 999-99-99\"></p-inputMask>\n        <div\n          *ngIf=\"form.get('phone')?.invalid && form.get('phone')?.touched\"\n          class=\"validation\">\n\n          <small *ngIf=\"form.get('phone')?.hasError('required')\">\n            Поле Телефон не может быть пустым\n          </small>\n        </div>\n      </div>\n\n      <br>\n\n      <div class=\"form-control\">\n        <label>Тема </label>\n        <select>\n          <option\n            *ngFor=\"let subject of subjects\"\n            value=\"{{subject.id}}\"\n            [ngValue]=\"subject\"\n          >\n            {{subject.name}}\n          </option>\n        </select>\n      </div>\n\n      <br>\n\n      <div class=\"form-control\">\n        <label>Сообщение </label>\n        <input type=\"text\" placeholder=\"\" formControlName=\"message\">\n        <div\n          *ngIf=\"form.get('message')?.invalid && form.get('message')?.touched\"\n          class=\"validation\">\n\n\n          <small *ngIf=\"form.get('message')?.hasError('required')\">\n            Поле Сообщение не может быть пустым\n          </small>\n\n        </div>\n      </div>\n\n      <br>\n\n\n\n      <button class=\"btn\"type=\"submit\" [disabled]=\"form.invalid\">Отправить</button>\n\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}